import{D as C,r as v,E as S,G as g,H as $,I as E,h as M,J as _,K as P,L as O,s as B,n as K,M as H,N as R,P as x,C as N,$ as j}from"./BFP_9muY.js";const z=s=>s==="defer"||s===!1;function I(...s){var m;const n=typeof s[s.length-1]=="string"?s.pop():void 0;typeof s[0]!="string"&&s.unshift(n);let[t,i,a={}]=s;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof i!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const e=P(),u=i,l=()=>null,w=()=>e.isHydrating?e.payload.data[t]:e.static.data[t];a.server=a.server??!0,a.default=a.default??l,a.getCachedData=a.getCachedData??w,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0,a.deep=a.deep??C.deep,a.dedupe=a.dedupe??"cancel";const y=()=>a.getCachedData(t,e)!=null;if(!e._asyncData[t]||!a.immediate){(m=e.payload._errors)[t]??(m[t]=null);const c=a.deep?v:S;e._asyncData[t]={data:c(a.getCachedData(t,e)??a.default()),pending:v(!y()),error:g(e.payload._errors,t),status:v("idle")}}const r={...e._asyncData[t]};r.refresh=r.execute=(c={})=>{if(e._asyncDataPromises[t]){if(z(c.dedupe??a.dedupe))return e._asyncDataPromises[t];e._asyncDataPromises[t].cancelled=!0}if((c._initial||e.isHydrating&&c._initial!==!1)&&y())return Promise.resolve(a.getCachedData(t,e));r.pending.value=!0,r.status.value="pending";const d=new Promise((f,o)=>{try{f(u(e))}catch(h){o(h)}}).then(async f=>{if(d.cancelled)return e._asyncDataPromises[t];let o=f;a.transform&&(o=await a.transform(f)),a.pick&&(o=T(o,a.pick)),e.payload.data[t]=o,r.data.value=o,r.error.value=null,r.status.value="success"}).catch(f=>{if(d.cancelled)return e._asyncDataPromises[t];r.error.value=O(f),r.data.value=B(a.default()),r.status.value="error"}).finally(()=>{d.cancelled||(r.pending.value=!1,delete e._asyncDataPromises[t])});return e._asyncDataPromises[t]=d,e._asyncDataPromises[t]},r.clear=()=>J(e,t);const D=()=>r.refresh({_initial:!0}),b=a.server!==!1&&e.payload.serverRendered;{const c=K();if(c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const o=c._nuxtOnBeforeMountCbs;$(()=>{o.forEach(h=>{h()}),o.splice(0,o.length)}),E(()=>o.splice(0,o.length))}b&&e.isHydrating&&(r.error.value||y())?(r.pending.value=!1,r.status.value=r.error.value?"error":"success"):c&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?c._nuxtOnBeforeMountCbs.push(D):a.immediate&&D();const d=H();if(a.watch){const o=M(a.watch,()=>r.refresh());d&&_(o)}const f=e.hook("app:data:refresh",async o=>{(!o||o.includes(t))&&await r.refresh()});d&&_(f)}const p=Promise.resolve(e._asyncDataPromises[t]).then(()=>r);return Object.assign(p,r),p}function J(s,n){n in s.payload.data&&(s.payload.data[n]=void 0),n in s.payload._errors&&(s.payload._errors[n]=null),s._asyncData[n]&&(s._asyncData[n].data.value=void 0,s._asyncData[n].error.value=null,s._asyncData[n].pending.value=!1,s._asyncData[n].status.value="idle"),n in s._asyncDataPromises&&(s._asyncDataPromises[n].cancelled=!0,s._asyncDataPromises[n]=void 0)}function T(s,n){const t={};for(const i of n)t[i]=s[i];return t}const q="$s";function F(...s){const n=typeof s[s.length-1]=="string"?s.pop():void 0;typeof s[0]!="string"&&s.unshift(n);const[t,i]=s;if(!t||typeof t!="string")throw new TypeError("[nuxt] [useState] key must be a string: "+t);if(i!==void 0&&typeof i!="function")throw new Error("[nuxt] [useState] init must be a function: "+i);const a=q+t,e=P(),u=g(e.payload.state,a);if(u.value===void 0&&i){const l=i();if(R(l))return e.payload.state[a]=l,l;u.value=l}return u}const L=async(s,n={},t={})=>{var u;const i=x(),a=`${JSON.stringify(n)}${s}`,e=F(`${a}-state`);if(N(()=>{e.value&&e.value.id&&j(e.value.id,l=>e.value=l,t)}),!e.value){const{data:l}=await I(a,()=>i.get(`cdn/stories/${s}`,n),"$bJ8ljY533n");l&&(e.value=(u=l.value)==null?void 0:u.data.story)}return e};export{F as a,L as u};
