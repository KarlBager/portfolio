{"version":3,"file":"index-Dagkb3ov.js","sources":["../../../../components/ProjectGridCard.vue","../../../../components/ProjectGrid.vue","../../../../components/ProjectHighlightCarouselCard.vue","../../../../components/ProjectHighlightCarousel.vue","../../../../pages/index.vue"],"sourcesContent":["<script setup>\n\nimport projects from '@/projects.json'\nimport categories from '@/categories.json'\n\nconst props = defineProps({projectId: String})\n\nlet stories = useState(() => ({})); // Initialize state to store all stories\nconst storyblokApi = useStoryblokApi(); // Get the Storyblok API instance\n\n  try {\n    const { data } = await storyblokApi.get('cdn/stories', {\n      version: 'draft',\n      per_page: 100 // Set to a value that fits your needs, maximum is 100\n    });\n\nstories = data.stories;\n\n\n  } catch (error) {\n    console.error('Error fetching stories:', error);\n  }\n\n// Define the category ID you want to filter by\nconst projectIdToFilter = props.projectId;\n\n// Use the filter method to filter out objects with the specified category ID\nconst filteredProjects = stories.filter(story => {\n  // Assuming 'category_id' is the key in each story object containing the category ID\n  return story.content.id == projectIdToFilter;\n});\n\n// Now 'filteredStories' contains only the stories with the specified category ID\n// console.log(filteredProjects);\n\n\nfunction getCategory(categoryId, categories) {\n  return categories.filter(category => category.categoryId === categoryId);\n}\n\n\nconst carouselCategory =  getCategory(props.categoryId, categories);\n\n</script>\n\n<template>\n<div class=\"case-card case-card-container drop-shadow-lg\">\n    <a :href=\"filteredProjects[0].slug\">\n    <div class=\"case-card\">\n       \n        <div v-if=\"filteredProjects[0].content.ProjectPageHeaderBlock[0].headerVideo\" class=\"case-card-video-overlay\">\n            <div class=\"video-container\">\n                <video playsinline autoplay muted loop>\n                <source :src=\"filteredProjects[0].content.ProjectPageHeaderBlock[0].headerVideoPath\" type=\"video/mp4\">\n                </video>\n            </div>\n        </div>\n\n        <div class=\"image-wrapper\">\n            <img loading=\"lazy\" class=\"grid-cell-image\" :src=\"filteredProjects[0].content.ProjectPageHeaderBlock[0].headerImagePath\" />\n        </div>\n\n        <div class=\"case-card-hover-overlay\">\n        </div>\n    </div>\n\n</a>\n\n\n\n</div>\n\n\n<div class=\"case-card-label-container text-center\">\n    <h2>{{ filteredProjects[0].content.ProjectPageHeaderBlock[0].title }}</h2>\n    <h4>{{ filteredProjects[0].content.ProjectPageHeaderBlock[0].subtitle }}, {{filteredProjects[0].content.ProjectPageHeaderBlock[0].year}}</h4>\n</div>\n\n</template>\n\n\n\n\n<style scoped>\n\n.case-card-label-container{\n    margin: 0.3rem 0;\n    line-height: 1.1;\n    color: var(--kb-gray-2);\n    width: 100%;\n}\n\n.case-card-label-container h2{\n    font-weight:600;\n    font-size: 1.0rem;\n}\n\n\n.case-card-label-container h4{\n    font-size: 0.6rem;\n}\n\n\n@media only screen and (min-width: 600px) {\n.case-card-label-container h2{\n    font-weight:600;\n    font-size: 1.1rem;\n}\n\n.case-card-label-container h4{\n    font-size: 0.7rem;\n}\n}\n\n\n.case-card-year-container{\n    position:absolute;\n    top: 0.2rem;\n    right: 0.4rem;\n}\n\n\n.case-card-video-overlay{\n    position: absolute;\n    top:0;\n    left:0;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--kb-corner-radius);\n    overflow: hidden;\n}\n\n\n.video-container {\n    position: relative;\n    width: 100%;\n    height: 100%; /* Fullscreen */\n    overflow: hidden;\n}\n\n.video-container video {\n    height: 100%;\n    object-fit: cover; /* Ensures the video fills the div without distortion */\n    z-index: 1;\n}\n\n\n.case-card-typo-container{\n    color: black;\n    position: absolute;\n    bottom: 2rem;\n    left: 2rem;\n    line-height: 1;\n    pointer-events: none;\n}\n\n.case-card-hover-overlay{\n    opacity: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: var(--kb-corner-radius);\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 10;\n}\n\n.case-card-hover-overlay:hover{\n    opacity: 100;\n    background-color: rgba(0,0,0,0.1);\n    transition: opacity 0.3s ease;\n}\n\n\n.case-card-typo-container h2{\n    font-size: 2.0rem;\n    font-family: \"roboto\", sans-serif;\n}\n\n\n.case-card-typo-container h4{\n    font-size: 0.8rem;\n}\n\n.case-card{\n    background-color: var(--kb-green-3);\n    width: 100%;\n    aspect-ratio: 16 / 9;\n    border-radius: var(--kb-corner-radius);\n    background-size: cover;\n    background-position: center;\n    position: relative;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n\n.case-card-container{\n    width: 100%;\n}\n\n\n.image-wrapper{\n    width: 100%;\n    height: 100%;\n    inset: 0;\n    align-items: center;\n    display: flex\n}\n\n\n.grid-cell-image{\n    min-height: 100%;\n    object-fit: cover;\n    overflow: hidden;\n    display: block;\n}\n\n\n@media only screen and (min-width: 600px) {\n\n}\n\n</style>","<script setup>\n\nimport ProjectCarouselCard from '../components/ProjectCarouselCard.vue'\n\nimport projects from '@/projects.json'\nimport categories from '@/categories.json'\n\nlet stories = useState(() => ({})); // Initialize state to store all stories\nconst storyblokApi = useStoryblokApi(); // Get the Storyblok API instance\n\n  try {\n    const { data } = await storyblokApi.get('cdn/stories', {\n      version: 'draft',\n      per_page: 100 // Set to a value that fits your needs, maximum is 100\n    });\n\nstories = data.stories;\n\n\n  } catch (error) {\n    console.error('Error fetching stories:', error);\n  }\n\n\n\nconst props = defineProps({\n    categoryId: Number,\n});\n\n\nlet categoryIdToFilter;\nlet filteredProjects;\nlet carouselCategory;\n\n\nif(props.categoryId != 4){\n\n// Define the category ID you want to filter by\ncategoryIdToFilter = props.categoryId;\n\n// Use the filter method to filter out objects with the specified category ID\nfilteredProjects = stories.filter(story => {\n  // Assuming 'category_id' is the key in each story object containing the category ID\n  return story.content.category == categoryIdToFilter;\n});\n\n// Now 'filteredStories' contains only the stories with the specified category ID\n// console.log(filteredProjects);\n\n\n\nfunction getCategory(categoryId, categories) {\n  return categories.filter(category => category.categoryId === categoryId);\n}\ncarouselCategory =  getCategory(props.categoryId, categories);\n\n} else{\n\n// Use the filter method to filter out objects with the specified category ID\nfilteredProjects = stories;\ncarouselCategory = [{categoryName: ''}];\n}\n\n\n// üî• Shuffle `filteredProjects` based on index positions\nconst customOrder = [6, 3, 9, 2, 5, 0, 8, 4, 7, 1]; // The desired index order\n\nconst orderedItems = customOrder.map(i => filteredProjects[i] || null); // Keep placeholders\nconst remainingItems = filteredProjects.filter(item => !orderedItems.includes(item));\n\nfilteredProjects = [...orderedItems.filter(Boolean), ...remainingItems]; // Boolean filter removes nulls\n\n\nconsole.log(filteredProjects); // üîç Check if it logs the correct order\n\n\n</script>\n\n\n\n\n\n<template>\n<div class=\"grid-container\">\n<!-- <h4 class=\"carousel-category-title\">{{ carouselCategory[0].categoryName }}</h4> -->\n\n      <div class=\"grid-cell\" v-for=\"(item, index) in filteredProjects\" :key=\"index\">\n        <ProjectGridCard :projectId=\"filteredProjects[index].content.id\" />\n      </div>\n\n</div>\n</template>\n\n\n\n<script>\n\n\n</script>\n\n\n\n<style>\n\n.grid-container{\n  padding: 0 var(--mobile-side-padding);\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 1rem;\n}\n\n@media only screen and (min-width: 600px) {\n  .grid-container{\n  padding: 0 3rem 3rem;\n  gap: 2rem;\n  }\n}\n\n\n@media only screen and (min-width: 1270px) {\n.grid-container{\n    grid-template-columns: repeat(3, 1fr);\n}\n}\n\n</style>","<script setup>\nimport projects from '@/projects.json'\nimport categories from '@/categories.json'\n\n\nconst props = defineProps({\n  projectId: String,\n})\n\n\nlet stories = useState(() => ({})); // Initialize state to store all stories\nconst storyblokApi = useStoryblokApi(); // Get the Storyblok API instance\n\ntry {\n  const { data } = await storyblokApi.get('cdn/stories', {\n    version: 'draft',\n    per_page: 100 // Set to a value that fits your needs, maximum is 100\n  });\n\n  stories = data.stories;\n\n\n} catch (error) {\n  console.error('Error fetching stories:', error);\n}\n\n// Define the category ID you want to filter by\nconst projectIdToFilter = props.projectId;\n\n// Use the filter method to filter out objects with the specified category ID\nconst filteredProjects = stories.filter(story => {\n  // Assuming 'category_id' is the key in each story object containing the category ID\n  return story.content.id == projectIdToFilter;\n});\n\n// Now 'filteredStories' contains only the stories with the specified category ID\n// console.log(filteredProjects);\n\n\n\n\n\n\n\nfunction getCategory(categoryId, categories) {\n  return categories.filter(category => category.categoryId === categoryId);\n}\n\n\nconst carouselCategory = getCategory(props.categoryId, categories);\n\n</script>\n\n\n\n<template>\n  <div class=\"case-card case-card-container-wide\">\n    <a :href=\"filteredProjects[0].slug\">\n      <div\n        :style=\"{ backgroundImage: 'url(' + filteredProjects[0].content.ProjectPageHeaderBlock[0].headerImagePath + ')' }\"\n        class=\"case-card case-card-wide\">\n\n        <div v-if=\"filteredProjects[0].content.ProjectPageHeaderBlock[0].headerVideo\" class=\"pointer-events-none case-card-wide-video-overlay\">\n          <div class=\"video-container\">\n            <video class=\"headerVideo\" preload=\"none\" playsinline autoplay muted loop>\n              <source :src=\"filteredProjects[0].content.ProjectPageHeaderBlock[0].headerVideoPath\" type=\"video/mp4\">\n            </video>\n          </div>\n        </div>\n\n        <div class=\"case-card-wide-hover-overlay\">\n        </div>\n\n        <!-- <div class=\"flex case-card-typo-container drop-shadow-lg\" :style=\"'text-decoration-color:' + filteredProjects[0].content.ProjectPageHeaderBlock[0].titleColor\">\n          <div>\n            <h2 :style=\"{ color: filteredProjects[0].content.ProjectPageHeaderBlock[0].titleColor }\">{{\n      filteredProjects[0].content.ProjectPageHeaderBlock[0].title }}</h2>\n            <h4 :style=\"{ color: filteredProjects[0].content.ProjectPageHeaderBlock[0].titleColor }\">{{\n      filteredProjects[0].content.ProjectPageHeaderBlock[0].subtitle }},\n              {{ filteredProjects[0].content.ProjectPageHeaderBlock[0].year}}</h4>\n            </div>\n        </div> -->\n\n      </div>\n    </a>\n    \n  </div>\n</template>\n\n\n\n\n<style>\n\n/* Add this to your component's style section or a global style file */\n.flickity-buttons-light {\n  fill: #ffffff; /* or any light color you prefer */\n}\n\n video.headerVideo{\n  display: none;\n}\n\n\n.case-card-typo-container {\n  position: absolute;\n  bottom: 2rem;\n  left: 1.5rem;\n  line-height: 1;\n  color: black;\n  max-width: 60vw;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n\n\n.case-card-wide-hover-overlay {\n  opacity: 0;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 10;\n}\n\n.case-card-wide-video-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n.video-container {\n    position: relative;\n    width: 100%;\n    height: 100%; /* Fullscreen */\n    overflow: hidden;\n}\n\n.video-container video {\n    height: 100%;\n    object-fit: cover; /* Ensures the video fills the div without distortion */\n    z-index: 1;\n}\n\n\n.case-card-wide-hover-overlay:hover {\n  opacity: 100;\n  background-color: rgba(0, 0, 0, 0.1);\n  transition: opacity 0.3s ease;\n}\n\n\n.case-card-typo-container h2 {\n  font-size: 2rem;\n  font-family: \"roboto\", sans-serif;\n}\n\n.case-card-wide {\n  background-color: var(--kb-green-3);\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  position: relative;\n}\n\n.case-card-container-wide {\n  width: 100vw;\n  /* padding: 0 var(--mobile-side-padding); */\n  aspect-ratio: 16 / 9;\n}\n\n@media only screen and (min-width: 600px) {\n\n  video.headerVideo{\n  display: block;\n  }\n\n\n.case-card-container-wide {\n  width: 100vw;\n  padding: 0 3rem;\n  aspect-ratio: 16 / 6;\n}\n\n.case-card-wide {\n  border-radius: var(--kb-corner-radius);\n}\n\n.case-card-wide-hover-overlay {\n  border-radius: var(--kb-corner-radius);\n}\n\n.case-card-wide-video-overlay {\n  border-radius: var(--kb-corner-radius);\n}\n\n\n\n.case-card-typo-container h2 {\n  font-size: 3rem;\n  font-family: \"roboto\", sans-serif;\n}\n\n.case-card-typo-container{\n  max-width: 80vw;\n}\n\n}\n\n@media only screen and (min-width: 1080px) {\n  .case-card-container-wide{\n  aspect-ratio: 16 / 4;\n  }\n}\n\n\n</style>","<script setup>\nimport ProjectHighlightCarouselCard from './ProjectHighlightCarouselCard.vue'\n\n\nlet stories = useState(() => ({})); // Initialize state to store all stories\nconst storyblokApi = useStoryblokApi(); // Get the Storyblok API instance\n\n\n  try {\n    const { data } = await storyblokApi.get('cdn/stories', {\n      version: 'draft',\n      per_page: 100 // Set to a value that fits your needs, maximum is 100\n    });\n\nstories = data.stories;\n\n\n  } catch (error) {\n    console.error('Error fetching stories:', error);\n  }\n\n  // Assuming you have fetched all stories and stored them in an array called 'stories'\n\n// Use the filter method to filter out objects with the specified category ID\nconst filteredProjects = stories.filter(story => {\n  // Assuming 'category_id' is the key in each story object containing the category ID\n  return story.content.highlighted == true;\n});\n\n// Now 'filteredStories' contains only the stories with the specified category ID\n// console.log(filteredProjects);\n\n\n\n</script>\n\n\n<template>\n<div>\n\n    <div class=\"carousel highlight-carousel drop-shadow-lg\" data-flickity='{\"autoPlay\": 5000, \"wrapAround\": true, \"arrowShape\": \"m72.58,60.84l18.84,6.41v20.25S0,52.9,0,52.9v-17.65S91.42.85,91.42.85v20.25s-18.84,6.35-18.84,6.35l-15.26,5.14-34.22,11.49,34.22,11.62,15.26,5.14Z\"}'>\n        \n      <div class=\"carousel-cell\">\n          <div class=\"case-card case-card-container-wide\">\n                \n                  <div class=\"bio-case-card case-card\">\n\n                  <div class=\"bio-card-typo-container\">\n                    <NuxtLink external to=\"AboutView\">\n                    <h1>Visuel designstuderende med kode som materiale</h1>\n                    <h4>S√∏ger praktik i perioden 20. oktober 2025 ‚Äì 6. marts 2026</h4>\n                  \n                  \n                  </NuxtLink>\n                  </div>\n\n                  </div>\n                \n              </div>\n      </div>\n      \n      \n      \n      <div class=\"carousel-cell\" v-for=\"(item, index) in filteredProjects\" :key=\"index\">\n        <ProjectHighlightCarouselCard :projectId=\"filteredProjects[index].content.id\"></ProjectHighlightCarouselCard>\n      </div>\n    </div>\n\n</div>\n</template>\n\n\n\n\n<style>\n\n.highlight-carousel{\nmargin: 0rem 0 2rem 0;\n}\n\n.bio-case-card{\n  padding: 0rem;\n  display: grid;\n  align-items: center;\n  grid-template-columns: 1fr 1fr;\n  background-image: url('https://www.media.karlbager.dk/media/karl-portrait_ext.jpg');\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: left 26% top 0%;\n  position: relative;\n}\n\n\n.bio-card-typo-container{\ncolor: white;\npadding: 0rem;\ngrid-column-start: 2;\ngrid-column-end: 4;\n\n}\n\n.bio-case-card h1{\n  font-size: 1.5rem;\n  line-height: 1.0;\n  color: var(--kb-green-1);\n}\n\n.bio-case-card h3{\n  margin-left: 0.4rem;\n  margin-top: 0.2rem;\n  font-size: 1rem;\n  font-style: italic;\n  line-height: 1;\n}\n\n.bio-case-card h4{\n  margin-left: 2rem;\n  margin-top: 1rem;\n  font-size: 0.7rem;\n  font-weight: 400;\n  color: var(--kb-green-3);\n  line-height: 1.2;\n}\n\n\n.flickity-prev-next-button.previous{\n  left: 0.2rem;\n}\n\n\n.flickity-prev-next-button.next{\n  right: 0.2rem;\n}\n\n\n.flickity-page-dots{\n  position: relative;\n  bottom: 20px;  \n  mix-blend-mode: difference;\n}\n\n\n.flickity-page-dot.is-selected{\n  background: rgba(255,255,255, 100%) !important;\n}\n\n.flickity-page-dot{\n  background: rgba(255,255,255, 30%) !important;\n}\n\n.flickity-button-icon{\n  fill: white !important;\n}\n\n.flickity-button{\n  mix-blend-mode: difference;\n}\n\n\n\n\n@media only screen and (min-width: 600px) {\n\n\n.highlight-carousel{\nmargin: 0rem 0 3rem 0;\n}\n\n\n  .flickity-page-dots{\n  position: relative;\n  bottom: 30px;  \n}\n\n\n.flickity-prev-next-button.previous{\n  left: 3rem;\n}\n\n\n.flickity-prev-next-button.next{\n  right: 3rem;\n}\n\n.bio-case-card{\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  justify-content: center;\n  align-items: center;\n  background-image: url('https://www.media.karlbager.dk/media/karl-portrait_ext.jpg');\n  width: 100%;\n  height: 100%;\n  border-radius: var(--kb-corner-radius);\n  background-size: cover;\n  background-position: left 30% top 50%;\n  position: relative;\n}\n\n\n.bio-card-typo-container{\ncolor: white;\npadding: 1rem;\ngrid-column-start: 2;\ngrid-column-end: 4;\n}\n\n.bio-case-card h1{\n  font-size: 2rem;\n  line-height: 1;\n}\n\n.bio-case-card h3{\n  margin-left: 0.4rem;\n  font-size: 1rem;\n  font-style: italic;\n  line-height: 1;\n}\n\n.bio-case-card h4{\n  margin-left: 6rem;\n  margin-top: 2rem;\n  font-size: 1rem;\n}\n}\n\n@media only screen and (min-width: 835px) {\n  .bio-case-card h4{\n  margin-left: 2rem;\n  margin-top: 2rem;\n  font-size: 1rem;\n}\n\n\n\n.bio-card-typo-container{\ncolor: white;\npadding: 5rem;\n}\n}\n\n@media only screen and (min-width: 1000px) {\n\n  .bio-case-card h1{\nfont-size: 3rem;\n}\n\n}\n\n.header-portrait-container{\n  width: 15rem;\n  overflow: hidden;\n  border-radius: var(--kb-corner-radius);\n}\n\n.disabled {\n  pointer-events: none; /* Disable pointer events */\n  cursor: default; /* Change cursor to default */\n  opacity: 0.5; /* Optionally reduce opacity to indicate disabled state */\n}\n\n\n\n.flickity-button-icon{\n\nopacity: 0.3;\n}\n\n.flickity-button-icon:hover{\nopacity: 1;\n}\n\n.flickity-button, .flickity-button:hover{\n  background: none;\n}\n\n.flickity-prev-next-button .flickity-button-icon{\n  height: 40%;\n}\n\n.flickity-button:focus{\n  outline: 0;\n  box-shadow: none;\n}\n\n</style>","<script setup>\n\nimport ProjectHighlightCarousel from '../components/ProjectHighlightCarousel.vue'\nimport ProjectCarousel from '../components/ProjectCarousel.vue'\n\nimport { onMounted } from 'vue';\n\n// Function to load Flickity CSS and JS\nconst loadFlickity = () => {\n\n  // Load Flickity JS\n  const script = document.createElement('script');\n  script.src = '/flickity/dist/flickity.pkgd.min.js'; // Static path to JS\n  script.id = 'flickity-script';\n  document.body.appendChild(script);\n};\n\nconst destroyFlickity = () => {\n  const oldScript = document.querySelector('#flickity-script');\n  oldScript.remove();\n};\n\nconst reloadFlickity = () => {\n  const oldScript = document.querySelector('#flickity-script');\n  oldScript.remove();\n\n// Load Flickity JS\nconst script = document.createElement('script');\nscript.src = '/flickity/dist/flickity.pkgd.min.js'; // Static path to JS\nscript.id = 'flickity-script';\ndocument.body.appendChild(script);\n};\n\n// Function to handle route changes\nconst handleRouteChange = () => {\n  const homepageContainer = document.querySelector('.homepage-container');\n  if (homepageContainer) {\n    loadFlickity(); // Call loadFlickity if the homepage-container is present\n  }\n};\n\nonMounted(() => {\n  loadFlickity();\n});\n\n\n\nconst story = await useAsyncStoryblok('home', { version: 'draft' })\n\n\ndefinePageMeta({\n  name: 'Projekter'\n})\n\n</script>\n\n<template>\n\n<div class=\"homepage-container\">\n\n<ProjectHighlightCarousel />\n\n\n<ProjectGrid :categoryId=1 />\n\n\n\n\n</div>\n</template>\n\n\n\n<script>\n\nexport default {\n  updated() {\n    this.$nextTick(() => {\n      // Code to run after the component has been updated\n      this.runScript();\n    });\n  },\n  methods: {\n    runScript() {\n      \n    }\n  }\n}\n\n\n</script>\n\n\n<style scoped>\n\n/* \n.homepage-container{\n  opacity: 0;\n  animation: fade 1s forwards;\n} */\n\n</style>"],"names":["useStoryblokApi","_withAsyncContext","categories"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,UAAM,QAAQ;AAEd,QAAI,UAAU,SAAS,OAAO,KAAE,aAAC;AACjC,UAAM,eAAeA,GAAe;AAElC,QAAI;AACF,YAAM,EAAE,KAAM,KAAG,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAM,aAAa,IAAI,eAAe;AAAA,QACrD,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MAChB,CAAK,CAAA;AAEL,gBAAU,KAAK;AAAA,IAGZ,SAAQ,OAAO;AACd,cAAQ,MAAM,2BAA2B,KAAK;AAAA,IAC/C;AAGH,UAAM,oBAAoB,MAAM;AAGhC,UAAM,mBAAmB,QAAQ,OAAO,WAAS;AAE/C,aAAO,MAAM,QAAQ,MAAM;AAAA,IAC7B,CAAC;AAMD,aAAS,YAAY,YAAYC,aAAY;AAC3C,aAAOA,YAAW,OAAO,cAAY,SAAS,eAAe,UAAU;AAAA,IACzE;AAG0B,gBAAY,MAAM,YAAY,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;AClClE,QAAI,UAAU,SAAS,OAAO,KAAE,aAAC;AACjC,UAAM,eAAeF,GAAe;AAElC,QAAI;AACF,YAAM,EAAE,KAAM,KAAG,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAM,aAAa,IAAI,eAAe;AAAA,QACrD,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MAChB,CAAK,CAAA;AAEL,gBAAU,KAAK;AAAA,IAGZ,SAAQ,OAAO;AACd,cAAQ,MAAM,2BAA2B,KAAK;AAAA,IAC/C;AAIH,UAAM,QAAQ;AAKd,QAAI;AACJ,QAAI;AAIJ,QAAG,MAAM,cAAc,GAAE;AAgBzB,UAAS,cAAT,SAAqB,YAAYC,aAAY;AAC3C,eAAOA,YAAW,OAAO,cAAY,SAAS,eAAe,UAAU;AAAA,MACzE;AAfA,2BAAqB,MAAM;AAG3B,yBAAmB,QAAQ,OAAO,WAAS;AAEzC,eAAO,MAAM,QAAQ,YAAY;AAAA,MACnC,CAAC;AAUmB,kBAAY,MAAM,YAAY,UAAU;AAAA,IAE5D,OAAM;AAGN,yBAAmB;AAAA,IAEnB;AAIA,UAAM,cAAc,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAEjD,UAAM,eAAe,YAAY,IAAI,OAAK,iBAAiB,CAAC,KAAK,IAAI;AACrE,UAAM,iBAAiB,iBAAiB,OAAO,UAAQ,CAAC,aAAa,SAAS,IAAI,CAAC;AAEnF,uBAAmB,CAAC,GAAG,aAAa,OAAO,OAAO,GAAG,GAAG,cAAc;AAGtE,YAAQ,IAAI,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpE5B,UAAM,QAAQ;AAKd,QAAI,UAAU,SAAS,OAAO,KAAE,aAAC;AACjC,UAAM,eAAeF,GAAe;AAEpC,QAAI;AACF,YAAM,EAAE,KAAM,KAAG,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAM,aAAa,IAAI,eAAe;AAAA,QACrD,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MACd,CAAG,CAAA;AAED,gBAAU,KAAK;AAAA,IAGjB,SAAS,OAAO;AACd,cAAQ,MAAM,2BAA2B,KAAK;AAAA,IAChD;AAGA,UAAM,oBAAoB,MAAM;AAGhC,UAAM,mBAAmB,QAAQ,OAAO,WAAS;AAE/C,aAAO,MAAM,QAAQ,MAAM;AAAA,IAC7B,CAAC;AAWD,aAAS,YAAY,YAAYC,aAAY;AAC3C,aAAOA,YAAW,OAAO,cAAY,SAAS,eAAe,UAAU;AAAA,IACzE;AAGyB,gBAAY,MAAM,YAAY,UAAU;;;;;;;;;;;;;;;;;;;;;;;AC7CjE,QAAI,UAAU,SAAS,OAAO,KAAE,aAAC;AACjC,UAAM,eAAeF,GAAe;AAGlC,QAAI;AACF,YAAM,EAAE,KAAM,KAAG,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAM,aAAa,IAAI,eAAe;AAAA,QACrD,SAAS;AAAA,QACT,UAAU;AAAA;AAAA,MAChB,CAAK,CAAA;AAEL,gBAAU,KAAK;AAAA,IAGZ,SAAQ,OAAO;AACd,cAAQ,MAAM,2BAA2B,KAAK;AAAA,IAC/C;AAKH,UAAM,mBAAmB,QAAQ,OAAO,WAAS;AAE/C,aAAO,MAAM,QAAQ,eAAe;AAAA,IACtC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgDD,MAAA,cAAe;AAAA,EACb,UAAU;AACR,SAAK,UAAU,MAAM;AAEnB,WAAK,UAAU;AAAA,IAAA,CAChB;AAAA,EACH;AAAA,EACA,SAAS;AAAA,IACP,YAAY;AAAA,IAEZ;AAAA,EACF;AACF;;;;;;IAxCoB,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,kBAAkB,QAAQ,EAAE,SAAS,QAAA,CAAS,CAAA;;;;;;;;;;;;;;;;;"}